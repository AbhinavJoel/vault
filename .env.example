# In your /upload route, after checking if req.file exists:
ALLOWED_TYPES='image/jpeg,image/png,image/gif'

const validateObjectId = (req, res, next) => {
    if (!mongoose.Types.ObjectId.isValid(req.params.id)) {
        logger.warn('Invalid ID format', { id: req.params.id, ip: req.ip });
        return res.status(400).json({ message: 'Invalid ID format' });
    }
    next();
};

// Then use it in your routes:
app.get('/image/:id', validateObjectId, async (req, res) => {
    // your existing code
    res.set('Cache-Control', 'public, max-age=31557600'); // Cache for 1 year
    res.set('ETag', file.md5);
});
app.delete('/image/:id', validateObjectId, async (req, res) => {
    // your existing code
});

app.get('/health', (req, res) => {
    const healthcheck = {
        uptime: process.uptime(),
        status: 'OK',
        timestamp: Date.now(),
        mongodb: !!gfs ? 'Connected' : 'Disconnected'
    };
    res.json(healthcheck);
});

process.on('SIGTERM', () => {
    logger.info('SIGTERM received');
    conn.close(() => {
        logger.info('MongoDB connection closed');
        process.exit(0);
    });
});